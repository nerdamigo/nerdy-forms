@{
    ViewBag.Title = "Basic Implementation - Samples";
}

<div class="row">
    <div class="col-md-8 col-md-push-2">
        <h2>Quick Start - a Basic Implementation</h2>

		<div class="row">
			<div class="col-md-6">
				<h3>Sample Form </h3>
				<form method="post" action="@Url.Action("Handle", "SampleForm", new { FormName="TestForm" })">
					<div class="form-group">
						<label>Your Name</label>
						<input type="text" class="form-control" name="Name" />
					</div>

					<div class="form-group">
						<label>A Color</label>
						<input type="text" class="form-control" name="Color" />
					</div>

					<button type="submit" class="btn btn-primary">
						Submit
					</button>
				</form>
			</div>
			<div class="col-md-6">
				<h3>Most Recent Submissions</h3>
				<ul class="list-group">
					@foreach (dynamic iSubmission in ViewBag.RecentSubmissions)
					{
						<li class="list-group-item">
							@iSubmission.Name likes the color @iSubmission.Color
						</li>
					}
				</ul>
			</div>
		</div>

		<h3>Building the Basic Sample</h3>
		<p>
			Out of the gate, the constructor for the NerdyForms form processing controller requires a <code>INerdyFormHandler</code>.
			To use the NerdyForms system without some form of Dependency Injection, it is recommended that you provide your own derived controller.
			For example:

		</p>

		<pre><code>public class SampleFormController : NerdyForms.NerdyFormController
{
	public SampleFormController()
		: base(new List&lt;INerdyFormHandler&gt;()
		{
			new DummyNerdyFormHandler()
		})
	{
	}
}</code></pre>

		<p>
			A simple class as shown above allows the necessary form handlers to be declaratively passed to the base NerdyFormController.
			With that controller created, we now need to ensure that form submissions can be routed by updating our application's routing table.
			For example, in Global.asax.cs:
		</p>

		<pre><code>RouteTable.Routes.MapRoute(
	name: "NerdyForms",
	url: "Form/{FormName}",
	defaults: new { controller = "SampleForm", action = "Handle" }
);</code></pre>

		<p>
			Next, simply drop a form with a few fields, post it at the route you registered, and check out the results!
		</p>

		<pre><code>&lt;form method=&quot;post&quot; action=&quot;@@Url.Action(&quot;Handle&quot;, &quot;SampleForm&quot;, new { FormName=&quot;TestForm&quot; })&quot;&gt;
	&lt;div class=&quot;form-group&quot;&gt;
		&lt;label&gt;Your Name&lt;/label&gt;
		&lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;Name&quot; /&gt;
	&lt;/div&gt;
	&lt;div class=&quot;form-group&quot;&gt;
		&lt;label&gt;A Color&lt;/label&gt;
		&lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;Color&quot; /&gt;
	&lt;/div&gt;
	&lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;
		Submit
	&lt;/button&gt;
&lt;/form&gt;</code></pre>

		<div id="disqus_thread"></div>
		<script type="text/javascript">
			/* * * CONFIGURATION VARIABLES * * */
			var disqus_shortname = 'nerdyforms';

			/* * * DON'T EDIT BELOW THIS LINE * * */
			(function() {
				var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
				dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
				(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
			})();
		</script>
		<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
    </div>
</div>