@{
    ViewBag.Title = "Home";
}

<div class="jumbotron">
    <h1>NerdyForms</h1>
    <p class="lead">NerdyForms is a quick way to process incoming form submissions</p>
	<p>Simply add a route for forms to target, and fields will be constructed into a dynamic object for implementers of INerdyFormHandler to process.</p>
</div>

<div class="row">
    <div class="col-md-3">
        <h2>Getting started</h2>
        <p>
            See how to add a route for your MVC application, and the basics of building a form to be processed
        </p>
        <p><a class="btn btn-default" href="@Url.Action("Basic", "Sample")">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-3">
        <h2>Complex Objects</h2>
        <p>You can easily bind complex data from your forms.</p>
        <p><a class="btn btn-default" href="@Url.Action("Complex", "Sample")">Learn more &raquo;</a></p>
    </div>
	<div class="col-md-3">
		<h2>Inheritance</h2>
		<p>
			Derive from the base implementation to add power to your application.
		</p>
		<p><a class="btn btn-default" href="@Url.Action("Inheritance", "Sample")">Learn more &raquo;</a></p>
	</div>
	<div class="col-md-3">
		<h2>IOC</h2>
		<p>Leverage inversion of control and dependency injection to easily register your handlers.</p>
		<p><a class="btn btn-default" href="@Url.Action("IOC", "Sample")">Learn more &raquo;</a></p>
	</div>
</div>